module TwoWaySort

  use int.Int
  use bool.Bool
  use ref.Refint
  use array.Array
  use array.ArraySwap
  use array.ArrayPermut

  predicate (<<) (x y: bool) = x = False \/ y = True

  predicate sorted (a: array bool) =
    forall i1 i2: int. 0 <= i1 <= i2 < a.length -> a[i1] << a[i2]

  let two_way_sort (a: array bool) : unit
    requires { length a > 0 }
    ensures { sorted a }
  =
    label Init in
    let ref i = 0 in
    let ref j = length a - 1 in
    while i < j do
        variant { j - i }
        invariant { 0 <= i <= length a }
        invariant { 0 <= j <= length a - 1}
        invariant { forall j2: int. j < j2 < length a -> a[j2] = True }
        invariant { forall i2: int. 0 <= i2 < i -> a[i2] = False }
      if not a[i] then
        incr i
      else if a[j] then
        decr j
      else begin
        swap a i j;
        incr i;
        decr j
      end
    done

end
