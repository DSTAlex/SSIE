--------------------------------------------------------------------------------
-- This VHDL file is generated by EASE/HDL from TRANSLOGIC BV,
-- the 'Graphical Systems Design Tool'.
--
-- Ease 5.1 Revision 12.
-- Design library : TD1_Exo3.
-- Host name      : BAYLE.
-- User name      : bayle.
-- Time stamp     : Wed Mar 31 09:12:16 2004.
--
-- Designed by    : 
-- Company        : Translogic.
-- Design info    : 
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- Entity declaration of 'tb_MUX'.
-- Last modified : Fri Mar 26 16:15:15 2004.
--------------------------------------------------------------------------------


library ieee ;
use ieee.std_logic_1164.all ;
use ieee.numeric_std.all ;

entity tb_MUX is
end entity tb_MUX ;

--------------------------------------------------------------------------------
-- Architecture 'a0' of 'tb_MUX'
-- Last modified : Fri Mar 26 16:15:15 2004.
--------------------------------------------------------------------------------

architecture a0 of tb_MUX is

-- Taille des bus
constant BusSize : positive := 8;






  component MUX_BUS_4to1
    generic(
      BusSize :  positive range 2 to 32 := 8 ) ;
    port(
      Bus1   : in     std_logic_vector(BusSize-1 downto 0) ;
      Bus2   : in     std_logic_vector(BusSize-1 downto 0) ;
      Bus3   : in     std_logic_vector(BusSize-1 downto 0) ;
      Bus4   : in     std_logic_vector(BusSize-1 downto 0) ;
      BusOut : out    std_logic_vector(BusSize-1 downto 0) ;
      Sel    : in     std_logic_vector(1 downto 0) ) ;
  end component MUX_BUS_4to1 ;
  signal Bus1      :  std_logic_vector(BusSize-1 downto 0) ;
  signal Bus2      :  std_logic_vector(BusSize-1 downto 0) ;
  signal Bus3      :  std_logic_vector(BusSize-1 downto 0) ;
  signal Bus4      :  std_logic_vector(BusSize-1 downto 0) ;
  signal Sel       :  std_logic_vector(1 downto 0) ;
  signal BusOut    :  std_logic_vector(BusSize-1 downto 0) ;
  signal Sel_u1    :  std_logic_vector(1 downto 0) ;
  signal Bus4_u1   :  std_logic_vector(BusSize-1 downto 0) ;
  signal Bus3_u1   :  std_logic_vector(BusSize-1 downto 0) ;
  signal Bus2_u1   :  std_logic_vector(BusSize-1 downto 0) ;
  signal Bus1_u1   :  std_logic_vector(BusSize-1 downto 0) ;
  signal BusOut_u1 :  std_logic_vector(BusSize-1 downto 0) ;
-- signaux pour stimuli
signal Sel_s : std_logic_vector (Sel'range); 
signal Bus1_s,Bus2_s,Bus3_s,Bus4_s : std_logic_vector (BusSize-1 downto 0); 


begin


  u0: MUX_BUS_4to1
    generic map(
      BusSize => 8 )

    port map(
      Bus1 => Bus1,
      Bus2 => Bus2,
      Bus3 => Bus3,
      Bus4 => Bus4,
      BusOut => BusOut,
      Sel => Sel ) ;

  u1: MUX_BUS_4to1
    generic map(
      BusSize => 8 )

    port map(
      Bus1 => Bus1_u1,
      Bus2 => Bus2_u1,
      Bus3 => Bus3_u1,
      Bus4 => Bus4_u1,
      BusOut => BusOut_u1,
      Sel => Sel_u1 ) ;

  Bus1 <= Bus1_s ;
  Bus2 <= Bus2_s ;
  Bus3 <= Bus3_s ;
  Bus4 <= Bus4_s ;
  Sel <= Sel_s;

  Bus1_u1 <= Bus1_s ;
  Bus2_u1 <= Bus2_s ;
  Bus3_u1 <= Bus3_s ;
  Bus4_u1 <= Bus4_s ;
  Sel_u1 <= Sel_s;


  Stimuli: process		-- EASE/HDL sens.list
  begin

  	wait for 100 ns;

  	Bus1_s <= (0 => '1', others => '0');

  	Bus2_s <= (1 => '1', others => '0');

  	Bus3_s <= (2 => '1', others => '0');

  	Bus4_s <= (3 => '1', others => '0');

  	for i in 0 to (2**Sel'length)-1 loop

  		wait for 100 ns;

  		Sel_s <= std_logic_vector(to_unsigned(i,Sel'length));

    end loop;

    wait for 100 ns;

    wait;

  end process Stimuli ;
end architecture a0 ; -- of tb_MUX

